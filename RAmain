import React from 'react';
import {
  ActivityIndicator,
  AsyncStorage,
  Button,
  TextInput,
  StatusBar,
  StyleSheet,
  View,
} from 'react-native';
import { DataTable } from 'react-native-paper';
import {
  createSwitchNavigator,
  createAppContainer,
} from 'react-navigation';
import { createStackNavigator, } from 'react-navigation-stack'

class SignInScreen extends React.Component {
  static navigationOptions = {
    title: 'RattlerAttend',
    backgroundColor: '#ff7d00',
  };

  render() {
    return (
      <View style={styles.container}>
        <View style={styles.buttonContainer}>
          <Button 
            color="#018443" 
            title="Sign in!" 
            onPress={this._signInAsync} />
        </View>
        <TextInput style = {styles.usernameinput}
               underlineColorAndroid = "transparent"
               placeholder = "Username"
               placeholderTextColor = "#9a73ef"
               autoCapitalize = "none"
               onChangeText = {this.handleusername}/>
        <TextInput style = {styles.passwordinput}
               underlineColorAndroid = "transparent"
               placeholder = "Password"
               placeholderTextColor = "#9a73ef"
               autoCapitalize = "none"
               onChangeText = {this.handlepassword}/>
      </View>
    );
  }

  _signInAsync = async () => {
    await AsyncStorage.setItem('userToken', 'abc');
    this.props.navigation.navigate('App');
  };
}

class HomeScreen extends React.Component {
  static navigationOptions = {
    title: 'RattlerAttend',
  };

  render() {
    return (
      <View style={styles.container}>
       <DataTable>
        <DataTable.Header>
          <DataTable.Title>Class</DataTable.Title>
          <DataTable.Title numeric>Time</DataTable.Title>
          <DataTable.Title numeric>Absences</DataTable.Title>
        </DataTable.Header>

        <DataTable.Row>
          <DataTable.Cell>CNT</DataTable.Cell>
          <DataTable.Cell numeric>9:15-10:30 MWF</DataTable.Cell>
          <DataTable.Cell numeric>1</DataTable.Cell>
        </DataTable.Row>

        <DataTable.Row>
          <DataTable.Cell>COP</DataTable.Cell>
          <DataTable.Cell numeric>11:00-12:00 TuTh</DataTable.Cell>
          <DataTable.Cell numeric>1</DataTable.Cell>
        </DataTable.Row>

        <DataTable.Row>
          <DataTable.Cell>CIS</DataTable.Cell>
          <DataTable.Cell numeric>2:00-5:00 MW</DataTable.Cell>
          <DataTable.Cell numeric>0</DataTable.Cell>
        </DataTable.Row>

        <DataTable.Row>
          <DataTable.Cell>CNT</DataTable.Cell>
          <DataTable.Cell numeric>12:30-1:30 TuTh</DataTable.Cell>
          <DataTable.Cell numeric>2</DataTable.Cell>
        </DataTable.Row>

        <DataTable.Row>
          <DataTable.Cell>CNT</DataTable.Cell>
          <DataTable.Cell numeric>3:00-4:00 TuTh</DataTable.Cell>
          <DataTable.Cell numeric>0</DataTable.Cell>
        </DataTable.Row>
      </DataTable>
        
        
        <Button
          color="#ff7d00"
          title="My Student ID"
          onPress={this._showMoreApp}
        />
        <Button
          color="#ff7d00" 
          title="Sign out" 
          onPress={this._signOutAsync} />
      </View>
    );
  }

  _showMoreApp = () => {
    this.props.navigation.navigate('Other');
  };

  _signOutAsync = async () => {
    await AsyncStorage.clear();
    this.props.navigation.navigate('Auth');
  };
}

class OtherScreen extends React.Component {
  static navigationOptions = {
    title: 'My Student ID',
  };

  render() {
    return (
      <View style={styles.container}>
        <Button color="#ff7d00" title="Sign out" onPress={this._signOutAsync} />
        <StatusBar barStyle="default" />
      </View>
    );
  }

  _signOutAsync = async () => {
    await AsyncStorage.clear();
    this.props.navigation.navigate('Auth');
  };
}

class AuthLoadingScreen extends React.Component {
  constructor() {
    super();
    this._bootstrapAsync();
  }

  // Fetch the token from storage then navigate to our appropriate place
  _bootstrapAsync = async () => {
    const userToken = await AsyncStorage.getItem('userToken');

    // This will switch to the App screen or Auth screen and this loading
    // screen will be unmounted and thrown away.
    this.props.navigation.navigate(userToken ? 'App' : 'Auth');
  };

  // Render any loading content that you like here
  render() {
    return (
      <View style={styles.container}>
        <ActivityIndicator />
        <StatusBar barStyle="default" />
      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    //justifyContent: 'center',
    backgroundColor: '#018443',
  },
  buttonContainer:{
    width: '90%',
    top: '70%',
    alignItems: 'center',  
    justifyContent: 'center',
    backgroundColor: '#ff7d00',
    paddingVertical: 10,    
  },
  /*
  mainbuttonContainer:{
    width: '90%',
    top: '20%',
    alignItems: 'center',  
    justifyContent: 'center',
    backgroundColor: '#ff7d00',
    paddingVertical: 10,    
  },
  */
  usernameinput: {
    width: '90%',
    top: '30%',
    margin: 15,
    height: 40,
    borderColor: '#ff7d00',
    //borderWidth: 1,
    borderBottomWidth: 1,
   },
  passwordinput: {
    width: '90%',
    top: '30%',
    margin: 15,
    height: 40,
    borderColor: '#ff7d00',
    //borderWidth: 1,
    borderBottomWidth: 1,
   },

});

const AppStack = createStackNavigator({ Home: HomeScreen, Other: OtherScreen });
const AuthStack = createStackNavigator({ SignIn: SignInScreen });

export default createAppContainer(
  createSwitchNavigator(
    {
      AuthLoading: AuthLoadingScreen,
      App: AppStack,
      Auth: AuthStack,
    },
    {
      initialRouteName: 'AuthLoading',
    }
  )
);
